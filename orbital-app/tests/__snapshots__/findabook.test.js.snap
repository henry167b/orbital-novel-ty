// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FindABook /> can render 1`] = `
<RNCSafeAreaView
  edges={
    [
      "bottom",
      "left",
      "right",
      "top",
    ]
  }
  style={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <View
    collapsable={false}
    style={
      {
        "backgroundColor": "#F3F6F8",
        "borderRadius": 10,
        "height": 50,
        "marginHorizontal": 35,
        "marginVertical": 25,
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "width": "80%",
      }
    }
    testID="search-bar-container-outer-layer"
  >
    <View
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#F3F6F8",
          "borderRadius": 10,
          "flex": 1,
          "flexDirection": "row",
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="search-bar-container"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderRadius": 20,
            "height": 40,
            "margin": 6,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
            "width": 40,
          }
        }
        testID="icon-button-container-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "transparent",
              "borderColor": "rgba(121, 116, 126, 1)",
              "borderRadius": 20,
              "borderWidth": 0,
              "elevation": 0,
              "flex": 1,
              "overflow": "hidden",
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="icon-button-container"
        >
          <View
            accessibilityComponentType="button"
            accessibilityLabel="search"
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityTraits="button"
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            centered={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                [
                  {
                    "alignItems": "center",
                    "flexGrow": 1,
                    "justifyContent": "center",
                  },
                  {
                    "borderRadius": 20,
                  },
                ],
              ]
            }
            testID="icon-button"
          >
            <Text />
          </View>
        </View>
      </View>
      <TextInput
        accessibilityRole="search"
        keyboardAppearance="light"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search keywords or ISBN"
        placeholderTextColor="rgba(28, 27, 31, 1)"
        returnKeyType="search"
        selectionColor="rgba(103, 80, 164, 1)"
        style={
          [
            {
              "alignSelf": "stretch",
              "flex": 1,
              "fontSize": 18,
              "minWidth": 0,
              "paddingLeft": 8,
              "textAlign": "left",
            },
            {
              "color": "rgba(73, 69, 79, 1)",
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "400",
              "letterSpacing": 0.15,
              "lineHeight": 0,
            },
            {
              "minHeight": 56,
              "paddingLeft": 0,
            },
            undefined,
          ]
        }
        testID="search-bar"
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        pointerEvents="none"
        style={
          [
            {
              "marginLeft": 16,
              "position": "absolute",
              "right": 0,
            },
            false,
          ]
        }
        testID="search-bar-icon-wrapper"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 20,
              "height": 40,
              "margin": 6,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
              "width": 40,
            }
          }
          testID="icon-button-container-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 20,
                "borderWidth": 0,
                "elevation": 0,
                "flex": 1,
                "overflow": "hidden",
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
              }
            }
            testID="icon-button-container"
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel="clear"
              accessibilityRole="button"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityTraits="button"
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              centered={true}
              collapsable={false}
              focusable={true}
              hitSlop={
                {
                  "bottom": 6,
                  "left": 6,
                  "right": 6,
                  "top": 6,
                }
              }
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  [
                    {
                      "alignItems": "center",
                      "flexGrow": 1,
                      "justifyContent": "center",
                    },
                    {
                      "borderRadius": 20,
                    },
                  ],
                ]
              }
              testID="icon-button"
            >
              <Text />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "backgroundColor": "rgba(202, 196, 208, 1)",
          "height": 0.5,
        },
        undefined,
        false,
        false,
        {
          "width": "100%",
        },
      ]
    }
  />
  <View
    style={
      {
        "alignItems": "flex-start",
        "flex": 1,
        "justifyContent": "flex-start",
        "paddingBottom": 20,
        "paddingHorizontal": 35,
        "paddingTop": 20,
        "width": "100%",
      }
    }
  >
    <Text
      style={
        [
          {
            "textAlign": "left",
          },
          {
            "color": "rgba(28, 27, 31, 1)",
            "fontFamily": "System",
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          {
            "writingDirection": "ltr",
          },
          undefined,
        ]
      }
    >
      RECENT SEARCHES
    </Text>
    <Text
      style={
        [
          {
            "textAlign": "left",
          },
          {
            "color": "rgba(28, 27, 31, 1)",
            "fontFamily": "System",
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          {
            "writingDirection": "ltr",
          },
          undefined,
        ]
      }
    />
    <RCTScrollView
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View />
    </RCTScrollView>
  </View>
</RNCSafeAreaView>
`;
